resources:
# for storing our mini-web
- name: ds561-ptrandev-deployment-hw10
  type: storage.v1.bucket
  properties:
    location: us-east4
    storageClass: STANDARD

# create a SQL instance
- name: ds561-ptrandev-sql-instance-hw10
  type: sqladmin.v1beta4.instance
  properties:
    name: ds561-ptrandev-sql-instance-hw10
    region: us-east4
    databaseVersion: MYSQL_8_0
    settings:
      # 4 CPU, 16GB RAM, 100GB SSD
      tier: db-custom-4-16384
      backupConfiguration:
        enabled: true
      ipConfiguration:
        ipv4Enabled: true
    instanceType: CLOUD_SQL_INSTANCE

# create a database in the SQL instance, for storing our success/fail requests
- type: sqladmin.v1beta4.database
  name: ds561-ptrandev-sql-db-hw10
  properties:
    name: ds561-ptrandev-sql-db-hw10
    instance: $(ref.ds561-ptrandev-sql-instance-hw10.name)

# create a service account that allows the VM to access the SQL instance, write to cloud logging, and read/write to the bucket
- name: ds561-ptrandev-sa-hw10
  type: iam.v1.serviceAccount
  properties:
    accountId: ds561-ptrandev-sa-hw10
    displayName: ds561-ptrandev-sa-hw10
    project: ds561-ptrandev
    description: ds561-ptrandev-sa-hw10

# create a VM with a startup script; use the service account to access the SQL instance, write to cloud logging, and read/write to the bucket
- name: ds561-ptrandev-vm-hw10
  type: compute.v1.instance
  properties:
    zone: us-east4-a
    machineType: zones/us-east4-a/machineTypes/f1-micro
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: projects/debian-cloud/global/images/family/debian-9
    networkInterfaces:
    - network: global/networks/default
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    serviceAccounts:
      - email: $(ref.ds561-ptrandev-sa-hw10.email)
        scopes:
          - https://www.googleapis.com/auth/cloud-platform
          - https://www.googleapis.com/auth/sqlservice.admin
          - https://www.googleapis.com/auth/logging.write
          - https://www.googleapis.com/auth/devstorage.full_control
          - https://www.googleapis.com/auth/devstorage.read_write
          - https://www.googleapis.com/auth/devstorage.read_only
          - https://www.googleapis.com/auth/devstorage.write_only
          - https://www.googleapis.com/auth/devstorage.media_upload
          - https://www.googleapis.com/auth/devstorage.metadata
          - https://www.googleapis.com/auth/devstorage.read_metadata
          - https://www.googleapis.com/auth/devstorage.write_metadata
          - https://www.googleapis.com/auth/devstorage.appdevs
          - https://www.googleapis.com/auth/devstorage.apps
          - https://www.googleapis.com/auth/devstorage.firstparty.read_only
          - https://www.googleapis.com/auth/devstorage.firstparty.read_write
          - https://www.googleapis.com/auth/devstorage.firstparty.write_only
          - https://www.googleapis.com/auth/devstorage.full_control
          - https://www.googleapis.com/auth/devstorage.read_only
          - https://www.googleapis.com/auth/devstorage.read_write
          - https://www.googleapis.com/auth/devstorage.write_only
          - https://www.googleapis.com/auth/devstorage.media_upload
          - https://www.googleapis.com/auth/devstorage.metadata
          - https://www.googleapis.com/auth/devstorage.read_metadata
          - https://www.googleapis.com/auth/devstorage.write_metadata
          - https://www.googleapis.com/auth/devstorage.appdevs
          - https://www.googleapis.com/auth/devstorage.apps
          - https://www.googleapis.com/auth/devstorage.firstparty.read_only
          - https://www.googleapis.com/auth/devstorage.firstparty.read_write
          - https://www.googleapis.com/auth/devstorage.firstparty.write_only
          - https://www.googleapis.com/auth/cloud-platform
          - https://www.googleapis.com/auth
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          if [ -d "/root/ds561-ptrandev-hw10" ]; then
              echo "Directory /root/ds561-ptrandev-hw10 exists."
          else
              # copy the files from the bucket to the directory
              gsutil -m cp -r gs://ds561-ptrandev-hw10/ /root/
          fi

          # go to the directory where the flask app is located
          cd /root/ds561-ptrandev-hw10

          # install dependencies from requirements.txt
          apt install python3-pip -y
          pip3 install -r requirements.txt

          # run the generate-data.py script
          python3 generate-content.py

          # copy the html folder to the bucket
          gsutil -m cp -r html/ gs://ds561-ptrandev-deployment-hw10

          # run the flask app
          python3 main.py
    dependsOn:
      - ds561-ptrandev-sql-instance-hw10